; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\mml_poke.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT ??_7mml_poke@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7mml_poke@@6B@				; mml_poke::`vftable'
;	COMDAT ??_7mml_poke@@6B@
CONST	SEGMENT
??_7mml_poke@@6B@ DD FLAT:?getCode@MusicItem@@UAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; mml_poke::`vftable'
	DD	FLAT:?setCode@MusicItem@@UAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?getAsm@MusicItem@@UAEXPAVMusicFile@@@Z
PUBLIC	??1mml_poke@@QAE@XZ				; mml_poke::~mml_poke
; Function compile flags: /Ogsy
; File f:\nes\nsdl\src\nsc\mml_poke.cpp
_TEXT	SEGMENT
??1mml_poke@@QAE@XZ PROC NEAR				; mml_poke::~mml_poke
; _this$ = ecx

; 44   : }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7MusicEvent@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1MusicItem@@QAE@XZ	; MusicItem::~MusicItem
??1mml_poke@@QAE@XZ ENDP				; mml_poke::~mml_poke
_TEXT	ENDS
PUBLIC	??0mml_poke@@QAE@IEQBG@Z			; mml_poke::mml_poke
$T84391	DD	0ffffffffH
	DD	FLAT:$L84319
$T84389	DD	019930520H
	DD	01H
	DD	FLAT:$T84391
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__data$ = 12						; size = 1
__strName$ = 16						; size = 4
??0mml_poke@@QAE@IEQBG@Z PROC NEAR			; mml_poke::mml_poke
; __addr$ = ecx

; 25   : {

  0000b	b8 00 00 00 00	 mov	 eax, __ehhandler$??0mml_poke@@QAE@IEQBG@Z
  00010	e8 00 00 00 00	 call	 __EH_prolog
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]
  0001a	57		 push	 edi
  0001b	ff 75 10	 push	 DWORD PTR __strName$[ebp]
  0001e	8b d9		 mov	 ebx, ecx
  00020	e8 00 00 00 00	 call	 ??0MusicEvent@@QAE@QBG@Z ; MusicEvent::MusicEvent
  00025	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 26   : 	iSize = 4;

  00029	6a 04		 push	 4
  0002b	58		 pop	 eax

; 27   : 	code.resize(iSize);

  0002c	8d 7e 14	 lea	 edi, DWORD PTR [esi+20]
  0002f	6a 00		 push	 0
  00031	8b cf		 mov	 ecx, edi
  00033	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7mml_poke@@6B@
  00039	89 46 30	 mov	 DWORD PTR [esi+48], eax
  0003c	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 28   : 	code[0] = nsd_Poke;

  00041	6a 10		 push	 16			; 00000010H
  00043	59		 pop	 ecx
  00044	39 4f 18	 cmp	 DWORD PTR [edi+24], ecx
  00047	72 05		 jb	 SHORT $L84335
  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	eb 03		 jmp	 SHORT $L84336
$L84335:
  0004e	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
$L84336:
  00051	c6 00 07	 mov	 BYTE PTR [eax], 7

; 29   : 	code[1] = (unsigned char)(_addr     );

  00054	39 4f 18	 cmp	 DWORD PTR [edi+24], ecx
  00057	72 05		 jb	 SHORT $L84351
  00059	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0005c	eb 03		 jmp	 SHORT $L84352
$L84351:
  0005e	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
$L84352:
  00061	88 58 01	 mov	 BYTE PTR [eax+1], bl

; 30   : 	code[2] = (unsigned char)(_addr >> 8);

  00064	39 4f 18	 cmp	 DWORD PTR [edi+24], ecx
  00067	72 05		 jb	 SHORT $L84367
  00069	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0006c	eb 03		 jmp	 SHORT $L84368
$L84367:
  0006e	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
$L84368:
  00071	c1 eb 08	 shr	 ebx, 8
  00074	88 58 02	 mov	 BYTE PTR [eax+2], bl

; 31   : 	code[3] = _data;

  00077	39 4f 18	 cmp	 DWORD PTR [edi+24], ecx
  0007a	72 05		 jb	 SHORT $L84383
  0007c	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0007f	eb 03		 jmp	 SHORT $L84384
$L84383:
  00081	83 c7 04	 add	 edi, 4
$L84384:
  00084	8a 45 0c	 mov	 al, BYTE PTR __data$[ebp]

; 32   : }

  00087	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008a	88 47 03	 mov	 BYTE PTR [edi+3], al
  0008d	5f		 pop	 edi
  0008e	8b c6		 mov	 eax, esi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00099	c9		 leave
  0009a	c2 0c 00	 ret	 12			; 0000000cH
$L84319:
  001d7	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  001da	e9 00 00 00 00	 jmp	 ??1MusicEvent@@QAE@XZ	; MusicEvent::~MusicEvent
__ehhandler$??0mml_poke@@QAE@IEQBG@Z:
  001df	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T84389
  001e4	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
??0mml_poke@@QAE@IEQBG@Z ENDP				; mml_poke::mml_poke
END
