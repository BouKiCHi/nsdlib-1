; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\mml_note.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
;	COMDAT ??_C@_1EI@HOPKHLKM@?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?3?$AA?3?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?$CI?$AA?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT ??_7mml_note@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_1EI@HOPKHLKM@?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?3?$AA?3?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	??_7mml_note@@6B@				; mml_note::`vftable'
;	COMDAT ??_C@_1EI@HOPKHLKM@?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?3?$AA?3?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1EI@HOPKHLKM@?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?3?$AA?3?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?$CI?$AA?$CJ@ DB 'm'
	DB	00H, 'm', 00H, 'l', 00H, '_', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	'e', 00H, ':', 00H, ':', 00H, 'm', 00H, 'm', 00H, 'l', 00H, '_'
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, 'e', 00H, '(', 00H, ')', 00H
	DB	0a2H, 095H, 'peg0', 01H, '0', 0a8H, '0', 0e9H, '0', 0fcH, '0L0'
	DB	'zv', 01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7mml_note@@6B@
CONST	SEGMENT
??_7mml_note@@6B@ DD FLAT:?getCode@MusicItem@@UAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; mml_note::`vftable'
	DD	FLAT:?setCode@MusicItem@@UAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?getAsm@MusicItem@@UAEXPAVMusicFile@@@Z
PUBLIC	?SetTai@mml_note@@QAEXXZ			; mml_note::SetTai
; Function compile flags: /Ogsy
; File f:\nes\nsdl\src\nsc\mml_note.cpp
_TEXT	SEGMENT
?SetTai@mml_note@@QAEXXZ PROC NEAR			; mml_note::SetTai
; _this$ = eax

; 89   : 	code[0] |= nsd_Note_Slur;

  00000	83 78 2c 10	 cmp	 DWORD PTR [eax+44], 16	; 00000010H
  00004	72 05		 jb	 SHORT $L55359
  00006	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00009	eb 03		 jmp	 SHORT $L55360
$L55359:
  0000b	83 c0 18	 add	 eax, 24			; 00000018H
$L55360:
  0000e	80 08 40	 or	 BYTE PTR [eax], 64	; 00000040H

; 90   : }

  00011	c3		 ret	 0
?SetTai@mml_note@@QAEXXZ ENDP				; mml_note::SetTai
PUBLIC	??1mml_note@@QAE@XZ				; mml_note::~mml_note
; Function compile flags: /Ogsy
_TEXT	SEGMENT
??1mml_note@@QAE@XZ PROC NEAR				; mml_note::~mml_note
; _this$ = ecx

; 77   : }

  00012	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7MusicEvent@@6B@
  00018	e9 00 00 00 00	 jmp	 ??1MusicItem@@QAE@XZ	; MusicItem::~MusicItem
??1mml_note@@QAE@XZ ENDP				; mml_note::~mml_note
_TEXT	ENDS
PUBLIC	??0mml_note@@QAE@HHH_NQBG@Z			; mml_note::mml_note
$T84457	DD	0ffffffffH
	DD	FLAT:$L84399
$T84454	DD	019930520H
	DD	01H
	DD	FLAT:$T84457
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__code$ = 12						; size = 4
_length$ = 16						; size = 4
_gatetime$ = 20						; size = 4
_slur$ = 24						; size = 1
__strName$ = 28						; size = 4
??0mml_note@@QAE@HHH_NQBG@Z PROC NEAR			; mml_note::mml_note

; 27   : {

  0001d	b8 00 00 00 00	 mov	 eax, __ehhandler$??0mml_note@@QAE@HHH_NQBG@Z
  00022	e8 00 00 00 00	 call	 __EH_prolog
  00027	53		 push	 ebx
  00028	56		 push	 esi
  00029	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]
  0002c	57		 push	 edi
  0002d	ff 75 1c	 push	 DWORD PTR __strName$[ebp]
  00030	e8 00 00 00 00	 call	 ??0MusicEvent@@QAE@QBG@Z ; MusicEvent::MusicEvent

; 28   : 	unsigned	char	opcode = nsd_Note | (unsigned char)_code;

  00035	8a 5d 0c	 mov	 bl, BYTE PTR __code$[ebp]
  00038	33 c0		 xor	 eax, eax
  0003a	80 cb 80	 or	 bl, 128			; 00000080H

; 29   : 	unsigned	int		i = 0;
; 30   : 
; 31   : 	if((_code<0) || (_code>15)){

  0003d	39 45 0c	 cmp	 DWORD PTR __code$[ebp], eax
  00040	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00043	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7mml_note@@6B@
  00049	0f 8c 9f 00 00
	00		 jl	 $L23928
  0004f	83 7d 0c 0f	 cmp	 DWORD PTR __code$[ebp], 15 ; 0000000fH
  00053	0f 8f 95 00 00
	00		 jg	 $L23928

; 34   : 	}
; 35   : 
; 36   : 	iSize = 1;
; 37   : 
; 38   : 	if(slur == true){

  00059	80 7d 18 01	 cmp	 BYTE PTR _slur$[ebp], 1
  0005d	c7 46 30 01 00
	00 00		 mov	 DWORD PTR [esi+48], 1
  00064	75 03		 jne	 SHORT $L24125

; 39   : 		opcode |= nsd_Note_Slur;

  00066	80 cb 40	 or	 bl, 64			; 00000040H
$L24125:

; 40   : 	}
; 41   : 
; 42   : 	if(length != -1){

  00069	83 7d 10 ff	 cmp	 DWORD PTR _length$[ebp], -1
  0006d	74 0a		 je	 SHORT $L24126

; 43   : 		opcode |= nsd_Note_Length;

  0006f	80 cb 20	 or	 bl, 32			; 00000020H

; 44   : 		iSize++;

  00072	c7 46 30 02 00
	00 00		 mov	 DWORD PTR [esi+48], 2
$L24126:

; 45   : 	}
; 46   : 
; 47   : 	if(gatetime != -1){

  00079	83 7d 14 ff	 cmp	 DWORD PTR _gatetime$[ebp], -1
  0007d	74 06		 je	 SHORT $L24127

; 48   : 		opcode |= nsd_Note_Gate;

  0007f	80 cb 10	 or	 bl, 16			; 00000010H

; 49   : 		iSize++;

  00082	ff 46 30	 inc	 DWORD PTR [esi+48]
$L24127:

; 50   : 	}
; 51   : 
; 52   : 	code.resize(iSize);

  00085	8d 7e 14	 lea	 edi, DWORD PTR [esi+20]
  00088	50		 push	 eax
  00089	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  0008c	8b cf		 mov	 ecx, edi
  0008e	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 53   : 	code[i] = opcode;

  00093	83 7f 18 10	 cmp	 DWORD PTR [edi+24], 16	; 00000010H
  00097	72 05		 jb	 SHORT $L84419
  00099	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0009c	eb 03		 jmp	 SHORT $L84420
$L84419:
  0009e	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
$L84420:

; 54   : 	i++;
; 55   : 
; 56   : 	if(length != -1){

  000a1	8b 4d 10	 mov	 ecx, DWORD PTR _length$[ebp]
  000a4	88 18		 mov	 BYTE PTR [eax], bl
  000a6	33 c0		 xor	 eax, eax
  000a8	40		 inc	 eax
  000a9	83 f9 ff	 cmp	 ecx, -1
  000ac	74 14		 je	 SHORT $L24128

; 57   : 		code[i] = (unsigned char)length;

  000ae	83 7f 18 10	 cmp	 DWORD PTR [edi+24], 16	; 00000010H
  000b2	72 05		 jb	 SHORT $L84434
  000b4	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000b7	eb 03		 jmp	 SHORT $L84435
$L84434:
  000b9	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
$L84435:

; 58   : 		i++;

  000bc	6a 02		 push	 2
  000be	88 48 01	 mov	 BYTE PTR [eax+1], cl
  000c1	58		 pop	 eax
$L24128:

; 59   : 	}
; 60   : 	if(gatetime != -1){

  000c2	8b 4d 14	 mov	 ecx, DWORD PTR _gatetime$[ebp]
  000c5	83 f9 ff	 cmp	 ecx, -1
  000c8	74 11		 je	 SHORT $L24130

; 61   : 		code[i] = (unsigned char)gatetime;

  000ca	83 7f 18 10	 cmp	 DWORD PTR [edi+24], 16	; 00000010H
  000ce	72 05		 jb	 SHORT $L84449
  000d0	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  000d3	eb 03		 jmp	 SHORT $L84450
$L84449:
  000d5	83 c7 04	 add	 edi, 4
$L84450:
  000d8	88 0c 07	 mov	 BYTE PTR [edi+eax], cl
$L24130:

; 62   : 		i++;
; 63   : 	}
; 64   : 
; 65   : }

  000db	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000de	5f		 pop	 edi
  000df	8b c6		 mov	 eax, esi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ea	c9		 leave
  000eb	c2 18 00	 ret	 24			; 00000018H
$L23928:

; 32   : 		_CERR << _T("mml_note::mml_note()関数で、エラーが発生しました。") << endl;

  000ee	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1EI@HOPKHLKM@?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?3?$AA?3?$AAm?$AAm?$AAl?$AA_?$AAn?$AAo?$AAt?$AAe?$AA?$CI?$AA?$CJ@
  000f3	68 00 00 00 00	 push	 OFFSET FLAT:?wcerr@std@@3V?$basic_ostream@GU?$char_traits@G@std@@@1@A ; std::wcerr
  000f8	e8 00 00 00 00	 call	 ??$?6GU?$char_traits@G@std@@@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@0@AAV10@PBG@Z ; std::operator<<<unsigned short,std::char_traits<unsigned short> >
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 ?endl@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@AAV21@@Z ; std::endl

; 33   : 		nsc_exit(EXIT_FAILURE);

  00103	33 c0		 xor	 eax, eax
  00105	83 c4 0c	 add	 esp, 12			; 0000000cH
  00108	40		 inc	 eax
  00109	e8 00 00 00 00	 call	 ?nsc_exit@@YAXH@Z	; nsc_exit
$L84458:
$L84456:
  0010e	cc		 int	 3
$L84399:
  001e9	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  001ec	e9 00 00 00 00	 jmp	 ??1MusicEvent@@QAE@XZ	; MusicEvent::~MusicEvent
__ehhandler$??0mml_note@@QAE@HHH_NQBG@Z:
  001f1	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T84454
  001f6	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
??0mml_note@@QAE@HHH_NQBG@Z ENDP			; mml_note::mml_note
END
