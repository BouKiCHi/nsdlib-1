PUBLIC	??_GFileOutput@@UAEPAXI@Z			; FileOutput::`scalar deleting destructor'
PUBLIC	??_DFileOutput@@QAEXXZ				; FileOutput::`vbase destructor'
PUBLIC	?seekp@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@JH@Z ; std::basic_ostream<char,std::char_traits<char> >::seekp
PUBLIC	?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ; std::basic_ios<char,std::char_traits<char> >::imbue
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::open
PUBLIC	??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
PUBLIC	?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue
PUBLIC	??4locale@std@@QAEAAV01@ABV01@@Z		; std::locale::operator=
PUBLIC	??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
EXTRN	??_EFileOutput@@UAEPAXI@Z:NEAR			; FileOutput::`vector deleting destructor'
EXTRN	??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:NEAR ; std::basic_ostream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:NEAR ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	?imbue@ios_base@std@@QAE?AVlocale@2@ABV32@@Z:NEAR ; std::ios_base::imbue
EXTRN	?classic@locale@std@@SAABV12@XZ:NEAR		; std::locale::classic
; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\FileOutput.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT ??_GFileOutput@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_DFileOutput@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekp@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@JH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT ??4locale@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7FileOutput@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_8FileOutput@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ostream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ostream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7FileOutput@@6B@				; FileOutput::`vftable'
PUBLIC	??_8FileOutput@@7B@				; FileOutput::`vbtable'
;	COMDAT ??_7FileOutput@@6B@
CONST	SEGMENT
??_7FileOutput@@6B@ DD FLAT:??_EFileOutput@@UAEPAXI@Z	; FileOutput::`vftable'
CONST	ENDS
;	COMDAT ??_8FileOutput@@7B@
CONST	SEGMENT
??_8FileOutput@@7B@ DD 00H				; FileOutput::`vbtable'
	DD	060H
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ostream<char,std::char_traits<char> >::`vftable'
CONST	ENDS
;	COMDAT ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
CONST	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
	DD	060H
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\ostream
CONST	ENDS
;	COMDAT ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC NEAR ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 56   : 		{	// destroy the object

  00000	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00003	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00006	c7 44 08 fc 00
	00 00 00	 mov	 DWORD PTR [eax+ecx-4], OFFSET FLAT:??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@

; 57   : 		}

  0000e	c3		 ret	 0
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
; Function compile flags: /Ogsy
;	COMDAT ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC NEAR ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00005	83 c1 04	 add	 ecx, 4
  00008	c7 44 08 fc 00
	00 00 00	 mov	 DWORD PTR [eax+ecx-4], OFFSET FLAT:??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
  00010	e9 00 00 00 00	 jmp	 ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor'
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC NEAR ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8d 71 fc	 lea	 esi, DWORD PTR [ecx-4]
  00004	8b ce		 mov	 ecx, esi
  00006	e8 00 00 00 00	 call	 ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
  0000b	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  00010	74 07		 je	 SHORT $L23427
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$L23427:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	c2 04 00	 ret	 4
??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xlocale
_TEXT	ENDS
;	COMDAT ??4locale@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4locale@std@@QAEAAV01@ABV01@@Z PROC NEAR		; std::locale::operator=, COMDAT
; _this$ = ecx

; 251  : 		{	// assign a locale

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 252  : 		if (_Ptr != _Right._Ptr)

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	57		 push	 edi
  00006	8b 7c 24 0c	 mov	 edi, DWORD PTR __Right$[esp+4]
  0000a	3b 0f		 cmp	 ecx, DWORD PTR [edi]
  0000c	74 1a		 je	 SHORT $L5099

; 253  : 			{	// different implementation, point at new one
; 254  : 			_DELETE_CRT(_Ptr->_Decref());

  0000e	e8 00 00 00 00	 call	 ?_Decref@facet@locale@std@@QAEPAV123@XZ ; std::locale::facet::_Decref
  00013	85 c0		 test	 eax, eax
  00015	74 08		 je	 SHORT $L41556
  00017	8b 10		 mov	 edx, DWORD PTR [eax]
  00019	6a 01		 push	 1
  0001b	8b c8		 mov	 ecx, eax
  0001d	ff 12		 call	 DWORD PTR [edx]
$L41556:

; 255  : 			_Ptr = _Right._Ptr;

  0001f	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00021	89 0e		 mov	 DWORD PTR [esi], ecx

; 256  : 			_Ptr->_Incref();

  00023	e8 00 00 00 00	 call	 ?_Incref@facet@locale@std@@QAEXXZ ; std::locale::facet::_Incref
$L5099:
  00028	5f		 pop	 edi

; 257  : 			}
; 258  : 		return (*this);

  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi

; 259  : 		}

  0002c	c2 04 00	 ret	 4
??4locale@std@@QAEAAV01@ABV01@@Z ENDP			; std::locale::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
$T54175	DD	0ffffffffH
	DD	FLAT:$L54161
$T54173	DD	019930520H
	DD	01H
	DD	FLAT:$T54175
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\streambuf
xdata$x	ENDS
;	COMDAT ?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
_TEXT	SEGMENT
$T54163 = -16						; size = 4
__Oldlocale$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Newlocale$ = 8					; size = 4
?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z PROC NEAR ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = ebx

; 76   : 		{	// set locale to argument

  00000	b8 00 00 00 00	 mov	 eax, __ehhandler$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
  00005	e8 00 00 00 00	 call	 __EH_prolog
  0000a	51		 push	 ecx
  0000b	83 65 f0 00	 and	 DWORD PTR $T54163[ebp], 0

; 77   : 		locale _Oldlocale = *_Plocale;

  0000f	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00012	57		 push	 edi
  00013	8b 38		 mov	 edi, DWORD PTR [eax]
  00015	8b cf		 mov	 ecx, edi
  00017	89 7d f0	 mov	 DWORD PTR __Oldlocale$[ebp], edi
  0001a	e8 00 00 00 00	 call	 ?_Incref@facet@locale@std@@QAEXXZ ; std::locale::facet::_Incref
  0001f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 78   : 		imbue(_Newlocale);

  00023	ff 75 08	 push	 DWORD PTR __Newlocale$[ebp]
  00026	8b 06		 mov	 eax, DWORD PTR [esi]
  00028	8b ce		 mov	 ecx, esi
  0002a	ff 50 30	 call	 DWORD PTR [eax+48]

; 79   : 		*_Plocale = _Newlocale;

  0002d	ff 75 08	 push	 DWORD PTR __Newlocale$[ebp]
  00030	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  00033	e8 00 00 00 00	 call	 ??4locale@std@@QAEAAV01@ABV01@@Z ; std::locale::operator=

; 80   : 		return (_Oldlocale);

  00038	8b cf		 mov	 ecx, edi
  0003a	89 3b		 mov	 DWORD PTR [ebx], edi
  0003c	e8 00 00 00 00	 call	 ?_Incref@facet@locale@std@@QAEXXZ ; std::locale::facet::_Incref
  00041	8d 4d f0	 lea	 ecx, DWORD PTR __Oldlocale$[ebp]
  00044	e8 00 00 00 00	 call	 ??1locale@std@@QAE@XZ	; std::locale::~locale

; 81   : 		}

  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	8b c3		 mov	 eax, ebx
  0004e	5f		 pop	 edi
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00056	c9		 leave
  00057	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L54161:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Oldlocale$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1locale@std@@QAE@XZ	; std::locale::~locale
__ehhandler$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T54173
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xlocale
xdata$x	SEGMENT
$T54200	DD	0ffffffffH
	DD	FLAT:$L54181
$T54198	DD	019930520H
	DD	01H
	DD	FLAT:$T54200
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\ios
xdata$x	ENDS
;	COMDAT ?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
_TEXT	SEGMENT
$T54184 = -16						; size = 4
__Oldlocale$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T54180 = 8						; size = 4
__Loc$ = 8						; size = 4
?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z PROC NEAR ; std::basic_ios<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = edi

; 93   : 		{	// set locale to argument

  00000	b8 00 00 00 00	 mov	 eax, __ehhandler$?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
  00005	e8 00 00 00 00	 call	 __EH_prolog
  0000a	51		 push	 ecx
  0000b	83 65 f0 00	 and	 DWORD PTR $T54184[ebp], 0
  0000f	56		 push	 esi

; 94   : 		locale _Oldlocale = ios_base::imbue(_Loc);

  00010	ff 75 08	 push	 DWORD PTR __Loc$[ebp]
  00013	8d 45 f0	 lea	 eax, DWORD PTR __Oldlocale$[ebp]
  00016	50		 push	 eax
  00017	8b f1		 mov	 esi, ecx
  00019	e8 00 00 00 00	 call	 ?imbue@ios_base@std@@QAE?AVlocale@2@ABV32@@Z ; std::ios_base::imbue
  0001e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 95   : 		if (rdbuf() != 0)

  00022	8b 76 28	 mov	 esi, DWORD PTR [esi+40]
  00025	85 f6		 test	 esi, esi
  00027	74 14		 je	 SHORT $L23959
  00029	53		 push	 ebx

; 96   : 			rdbuf()->pubimbue(_Loc);

  0002a	ff 75 08	 push	 DWORD PTR __Loc$[ebp]
  0002d	8d 5d 08	 lea	 ebx, DWORD PTR $T54180[ebp]
  00030	e8 00 00 00 00	 call	 ?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue
  00035	8b cb		 mov	 ecx, ebx
  00037	e8 00 00 00 00	 call	 ??1locale@std@@QAE@XZ	; std::locale::~locale
  0003c	5b		 pop	 ebx
$L23959:

; 97   : 		return (_Oldlocale);

  0003d	8b 4d f0	 mov	 ecx, DWORD PTR __Oldlocale$[ebp]
  00040	89 0f		 mov	 DWORD PTR [edi], ecx
  00042	e8 00 00 00 00	 call	 ?_Incref@facet@locale@std@@QAEXXZ ; std::locale::facet::_Incref
  00047	8d 4d f0	 lea	 ecx, DWORD PTR __Oldlocale$[ebp]
  0004a	e8 00 00 00 00	 call	 ??1locale@std@@QAE@XZ	; std::locale::~locale

; 98   : 		}

  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	8b c7		 mov	 eax, edi
  00054	5e		 pop	 esi
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	c9		 leave
  0005d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L54181:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Oldlocale$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1locale@std@@QAE@XZ	; std::locale::~locale
__ehhandler$?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T54198
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::imbue
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\ostream
;	COMDAT ?seekp@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@JH@Z
_TEXT	SEGMENT
$T54205 = -24						; size = 24
__Off$ = 8						; size = 4
__Way$ = 12						; size = 4
?seekp@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@JH@Z PROC NEAR ; std::basic_ostream<char,std::char_traits<char> >::seekp, COMDAT
; _this$ = esi

; 529  : 		{	// change output stream position by _Off, according to _Way

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 530  : 		if (!ios_base::fail()
; 531  : 			&& (off_type)_Myios::rdbuf()->pubseekoff(_Off, _Way,
; 532  : 				ios_base::out) == _BADOFF)

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000b	f6 44 31 08 06	 test	 BYTE PTR [ecx+esi+8], 6
  00010	75 3c		 jne	 SHORT $L54230
  00012	6a 02		 push	 2
  00014	ff 75 0c	 push	 DWORD PTR __Way$[ebp]
  00017	8b c1		 mov	 eax, ecx
  00019	ff 75 08	 push	 DWORD PTR __Off$[ebp]
  0001c	8b 4c 30 28	 mov	 ecx, DWORD PTR [eax+esi+40]
  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	8d 55 e8	 lea	 edx, DWORD PTR $T54205[ebp]
  00025	52		 push	 edx
  00026	ff 50 20	 call	 DWORD PTR [eax+32]
  00029	8b 45 f0	 mov	 eax, DWORD PTR $T54205[ebp+8]
  0002c	8b 4d e8	 mov	 ecx, DWORD PTR $T54205[ebp]
  0002f	03 c8		 add	 ecx, eax
  00031	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_BADOFF@std@@3JB ; std::_BADOFF
  00037	75 15		 jne	 SHORT $L54230

; 533  : 			_Myios::setstate(ios_base::failbit);

  00039	8b 06		 mov	 eax, DWORD PTR [esi]
  0003b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003e	03 ce		 add	 ecx, esi
  00040	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00043	6a 00		 push	 0
  00045	83 c8 02	 or	 eax, 2
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
$L54230:

; 534  : 		return (*this);

  0004e	8b c6		 mov	 eax, esi

; 535  : 		}

  00050	c9		 leave
  00051	c2 08 00	 ret	 8
?seekp@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@JH@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::seekp
_TEXT	ENDS
PUBLIC	?StreamPointerMove@FileOutput@@QAEXJ@Z		; FileOutput::StreamPointerMove
; Function compile flags: /Ogsy
; File f:\nes\nsdl\src\nsc\fileoutput.cpp
_TEXT	SEGMENT
_iSize$ = 8						; size = 4
?StreamPointerMove@FileOutput@@QAEXJ@Z PROC NEAR	; FileOutput::StreamPointerMove
; _this$ = esi

; 64   : 	seekp((long)iSize,ios::beg);

  00000	6a 00		 push	 0
  00002	ff 74 24 08	 push	 DWORD PTR _iSize$[esp]
  00006	e8 00 00 00 00	 call	 ?seekp@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@JH@Z ; std::basic_ostream<char,std::char_traits<char> >::seekp

; 65   : };

  0000b	c2 04 00	 ret	 4
?StreamPointerMove@FileOutput@@QAEXJ@Z ENDP		; FileOutput::StreamPointerMove
_TEXT	ENDS
PUBLIC	?StreamPointerAdd@FileOutput@@QAEXJ@Z		; FileOutput::StreamPointerAdd
; Function compile flags: /Ogsy
_TEXT	SEGMENT
_iSize$ = 8						; size = 4
?StreamPointerAdd@FileOutput@@QAEXJ@Z PROC NEAR		; FileOutput::StreamPointerAdd
; _this$ = esi

; 57   : 	seekp((long)iSize,ios::cur);

  0000e	6a 01		 push	 1
  00010	ff 74 24 08	 push	 DWORD PTR _iSize$[esp]
  00014	e8 00 00 00 00	 call	 ?seekp@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@JH@Z ; std::basic_ostream<char,std::char_traits<char> >::seekp

; 58   : };

  00019	c2 04 00	 ret	 4
?StreamPointerAdd@FileOutput@@QAEXJ@Z ENDP		; FileOutput::StreamPointerAdd
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xiosbase
xdata$x	SEGMENT
$T61043	DD	0ffffffffH
	DD	FLAT:$L61029
$T61041	DD	019930520H
	DD	01H
	DD	FLAT:$T61043
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\ostream
xdata$x	ENDS
;	COMDAT ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T61028 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Strbuf$ = 8						; size = 4
__Isstd$ = 12						; size = 1
_$initVBases$ = 16					; size = 4
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z PROC NEAR ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 44   : 	explicit basic_ostream(basic_streambuf<_Elem, _Traits> *_Strbuf,

  00000	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
  00005	e8 00 00 00 00	 call	 __EH_prolog
  0000a	51		 push	 ecx
  0000b	51		 push	 ecx
  0000c	33 c0		 xor	 eax, eax
  0000e	39 45 10	 cmp	 DWORD PTR _$initVBases$[ebp], eax
  00011	56		 push	 esi
  00012	8b f1		 mov	 esi, ecx
  00014	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00017	89 45 f0	 mov	 DWORD PTR $T61028[ebp], eax
  0001a	74 17		 je	 SHORT $L23979
  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
  00022	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET FLAT:??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
  00029	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  0002c	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T61028[ebp], 1
$L23979:
  00033	8b 06		 mov	 eax, DWORD PTR [esi]
  00035	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 45   : 		bool _Isstd = false)
; 46   : 		{	// construct from a stream buffer pointer
; 47   : 		_Myios::init(_Strbuf, _Isstd);

  00038	ff 75 0c	 push	 DWORD PTR __Isstd$[ebp]
  0003b	c7 04 06 00 00
	00 00		 mov	 DWORD PTR [esi+eax], OFFSET FLAT:??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
  00042	8b 06		 mov	 eax, DWORD PTR [esi]
  00044	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00047	ff 75 08	 push	 DWORD PTR __Strbuf$[ebp]
  0004a	03 ce		 add	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ; std::basic_ios<char,std::char_traits<char> >::init

; 48   : 		}

  00051	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00054	8b c6		 mov	 eax, esi
  00056	5e		 pop	 esi
  00057	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005e	c9		 leave
  0005f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L61029:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T61028[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0f 00 00
	00		 je	 $L61030
  0000c	83 65 f0 fe	 and	 DWORD PTR $T61028[ebp], -2 ; fffffffeH
  00010	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 04	 add	 ecx, 4
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$L61030:
  0001b	c3		 ret	 0
__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T61041
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\fstream
;	COMDAT ?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z
_TEXT	SEGMENT
__Filename$ = 8						; size = 4
__Prot$ = 12						; size = 4
?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z PROC NEAR ; std::basic_ofstream<char,std::char_traits<char> >::open, COMDAT
; _this$ = edi
; __Mode$ = eax

; 618  : 		{	// open a C stream with specified mode

  00000	56		 push	 esi

; 619  : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::out, _Prot) == 0)

  00001	ff 74 24 0c	 push	 DWORD PTR __Prot$[esp]
  00005	83 c8 02	 or	 eax, 2
  00008	50		 push	 eax
  00009	ff 74 24 10	 push	 DWORD PTR __Filename$[esp+8]
  0000d	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00010	e8 00 00 00 00	 call	 ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
  00015	85 c0		 test	 eax, eax
  00017	5e		 pop	 esi
  00018	75 15		 jne	 SHORT $L63354

; 620  : 			_Myios::setstate(ios_base::failbit);

  0001a	8b 07		 mov	 eax, DWORD PTR [edi]
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	03 cf		 add	 ecx, edi
  00021	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00024	6a 00		 push	 0
  00026	83 c8 02	 or	 eax, 2
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
$L63354:

; 621  : 		}

  0002f	c2 08 00	 ret	 8
?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::open
_TEXT	ENDS
PUBLIC	?fileopen@FileOutput@@QAEXPBD@Z			; FileOutput::fileopen
; Function compile flags: /Ogsy
; File f:\nes\nsdl\src\nsc\fileoutput.cpp
_TEXT	SEGMENT
_strFileName$ = 8					; size = 4
?fileopen@FileOutput@@QAEXPBD@Z PROC NEAR		; FileOutput::fileopen
; _this$ = eax

; 43   : void	FileOutput::fileopen(const char*	strFileName){

  0001c	57		 push	 edi

; 44   : 
; 45   : 	//File open
; 46   : 	open(strFileName,ios_base::out | ios_base::binary);

  0001d	68 b6 01 00 00	 push	 438			; 000001b6H
  00022	ff 74 24 0c	 push	 DWORD PTR _strFileName$[esp+4]
  00026	8b f8		 mov	 edi, eax
  00028	6a 22		 push	 34			; 00000022H
  0002a	58		 pop	 eax
  0002b	e8 00 00 00 00	 call	 ?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::open

; 47   : 	if(good()==false){

  00030	8b 07		 mov	 eax, DWORD PTR [edi]
  00032	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00035	83 7c 38 08 00	 cmp	 DWORD PTR [eax+edi+8], 0
  0003a	5f		 pop	 edi
  0003b	74 12		 je	 SHORT $L23938

; 48   : 		perror(strFileName);

  0003d	ff 74 24 04	 push	 DWORD PTR _strFileName$[esp-4]
  00041	e8 00 00 00 00	 call	 _perror

; 49   : 		nsc_exit(EXIT_FAILURE);

  00046	33 c0		 xor	 eax, eax
  00048	59		 pop	 ecx
  00049	40		 inc	 eax
  0004a	e8 00 00 00 00	 call	 ?nsc_exit@@YAXH@Z	; nsc_exit
$L63373:
$L23938:

; 50   : 	};
; 51   : };

  0004f	c2 04 00	 ret	 4
$L63372:
?fileopen@FileOutput@@QAEXPBD@Z ENDP			; FileOutput::fileopen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\ostream
xdata$x	SEGMENT
$T65775	DD	0ffffffffH
	DD	FLAT:$L65766
$T65773	DD	019930520H
	DD	01H
	DD	FLAT:$T65775
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\fstream
xdata$x	ENDS
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC NEAR ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 602  : 		{	// destroy the object

  00000	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00005	e8 00 00 00 00	 call	 __EH_prolog
  0000a	51		 push	 ecx
  0000b	8b 41 a0	 mov	 eax, DWORD PTR [ecx-96]
  0000e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00011	56		 push	 esi
  00012	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00015	c7 44 08 a0 00
	00 00 00	 mov	 DWORD PTR [eax+ecx-96], OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 603  : 		}

  00021	8d 71 a4	 lea	 esi, DWORD PTR [ecx-92]
  00024	8b ce		 mov	 ecx, esi
  00026	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  0002b	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  0002e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00031	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00034	c7 44 30 fc 00
	00 00 00	 mov	 DWORD PTR [eax+esi-4], OFFSET FLAT:??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
  0003c	5e		 pop	 esi
  0003d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00044	c9		 leave
  00045	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L65766:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 e9 5c	 sub	 ecx, 92			; 0000005cH
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
__ehhandler$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T65773
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
; Function compile flags: /Ogsy
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC NEAR ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = eax
  00000	56		 push	 esi
  00001	8b f0		 mov	 esi, eax
  00003	83 c6 60	 add	 esi, 96			; 00000060H
  00006	8b ce		 mov	 ecx, esi
  00008	e8 00 00 00 00	 call	 ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
  0000d	8b ce		 mov	 ecx, esi
  0000f	5e		 pop	 esi
  00010	e9 00 00 00 00	 jmp	 ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC NEAR ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8d 71 a0	 lea	 esi, DWORD PTR [ecx-96]
  00004	8b c6		 mov	 eax, esi
  00006	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
  0000b	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  00010	74 07		 je	 SHORT $L23451
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$L23451:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	c2 04 00	 ret	 4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xiosbase
xdata$x	SEGMENT
$T65804	DD	0ffffffffH
	DD	FLAT:$L65788
	DD	00H
	DD	FLAT:$L65790
$T65802	DD	019930520H
	DD	02H
	DD	FLAT:$T65804
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\fstream
xdata$x	ENDS
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T65787 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC NEAR ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT

; 583  : 		{	// construct unopened

  00000	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
  00005	e8 00 00 00 00	 call	 __EH_prolog
  0000a	51		 push	 ecx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]
  00010	57		 push	 edi
  00011	33 ff		 xor	 edi, edi
  00013	33 c0		 xor	 eax, eax
  00015	47		 inc	 edi
  00016	39 45 0c	 cmp	 DWORD PTR _$initVBases$[ebp], eax
  00019	89 45 f0	 mov	 DWORD PTR $T65787[ebp], eax
  0001c	74 13		 je	 SHORT $L23966
  0001e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
  00024	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], OFFSET FLAT:??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
  0002b	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  0002e	89 7d f0	 mov	 DWORD PTR $T65787[ebp], edi
$L23966:
  00031	50		 push	 eax
  00032	50		 push	 eax
  00033	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00036	53		 push	 ebx
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
  0003e	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00041	8b 06		 mov	 eax, DWORD PTR [esi]
  00043	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00046	6a 00		 push	 0
  00048	8b cb		 mov	 ecx, ebx
  0004a	c7 04 06 00 00
	00 00		 mov	 DWORD PTR [esi+eax], OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
  00051	e8 00 00 00 00	 call	 ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >

; 584  : 		}

  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	5f		 pop	 edi
  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00065	c9		 leave
  00066	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L65788:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T65787[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0f 00 00
	00		 je	 $L65789
  0000c	83 65 f0 fe	 and	 DWORD PTR $T65787[ebp], -2 ; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 60	 add	 ecx, 96			; 00000060H
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$L65789:
  0001b	c3		 ret	 0
$L65790:
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e9 00 00 00 00	 jmp	 ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ:
  00027	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T65802
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??1FileOutput@@UAE@XZ				; FileOutput::~FileOutput
; Function compile flags: /Ogsy
; File f:\nes\nsdl\src\nsc\fileoutput.cpp
_TEXT	SEGMENT
??1FileOutput@@UAE@XZ PROC NEAR				; FileOutput::~FileOutput
; _this$ = ecx

; 37   : {

  00052	8b 41 a0	 mov	 eax, DWORD PTR [ecx-96]
  00055	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00058	c7 44 08 a0 00
	00 00 00	 mov	 DWORD PTR [eax+ecx-96], OFFSET FLAT:??_7FileOutput@@6B@

; 38   : }

  00060	e9 00 00 00 00	 jmp	 ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
??1FileOutput@@UAE@XZ ENDP				; FileOutput::~FileOutput
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT ??_DFileOutput@@QAEXXZ
_TEXT	SEGMENT
??_DFileOutput@@QAEXXZ PROC NEAR			; FileOutput::`vbase destructor', COMDAT
; _this$ = eax
  00000	56		 push	 esi
  00001	8b f0		 mov	 esi, eax
  00003	83 c6 60	 add	 esi, 96			; 00000060H
  00006	8b ce		 mov	 ecx, esi
  00008	e8 00 00 00 00	 call	 ??1FileOutput@@UAE@XZ	; FileOutput::~FileOutput
  0000d	8b ce		 mov	 ecx, esi
  0000f	5e		 pop	 esi
  00010	e9 00 00 00 00	 jmp	 ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
??_DFileOutput@@QAEXXZ ENDP				; FileOutput::`vbase destructor'
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT ??_GFileOutput@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GFileOutput@@UAEPAXI@Z PROC NEAR			; FileOutput::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8d 71 a0	 lea	 esi, DWORD PTR [ecx-96]
  00004	8b c6		 mov	 eax, esi
  00006	e8 00 00 00 00	 call	 ??_DFileOutput@@QAEXXZ
  0000b	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  00010	74 07		 je	 SHORT $L23926
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$L23926:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	c2 04 00	 ret	 4
??_GFileOutput@@UAEPAXI@Z ENDP				; FileOutput::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0FileOutput@@QAE@XZ				; FileOutput::FileOutput
$T65836	DD	0ffffffffH
	DD	FLAT:$L65820
	DD	00H
	DD	FLAT:$L65822
$T65834	DD	019930520H
	DD	02H
	DD	FLAT:$T65836
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogsy
_TEXT	SEGMENT
$T65819 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T65818 = 12						; size = 4
_$initVBases$ = 12					; size = 4
??0FileOutput@@QAE@XZ PROC NEAR				; FileOutput::FileOutput

; 22   : {

  00065	b8 00 00 00 00	 mov	 eax, __ehhandler$??0FileOutput@@QAE@XZ
  0006a	e8 00 00 00 00	 call	 __EH_prolog
  0006f	51		 push	 ecx
  00070	56		 push	 esi
  00071	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]
  00074	57		 push	 edi
  00075	33 c0		 xor	 eax, eax
  00077	33 ff		 xor	 edi, edi
  00079	89 45 f0	 mov	 DWORD PTR $T65819[ebp], eax
  0007c	47		 inc	 edi
  0007d	39 45 0c	 cmp	 DWORD PTR _$initVBases$[ebp], eax
  00080	74 13		 je	 SHORT $L23921
  00082	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_8FileOutput@@7B@
  00088	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], OFFSET FLAT:??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
  0008f	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00092	89 7d f0	 mov	 DWORD PTR $T65819[ebp], edi
$L23921:
  00095	50		 push	 eax
  00096	56		 push	 esi
  00097	e8 00 00 00 00	 call	 ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
  0009c	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  0009f	8b 06		 mov	 eax, DWORD PTR [esi]
  000a1	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a4	c7 04 06 00 00
	00 00		 mov	 DWORD PTR [esi+eax], OFFSET FLAT:??_7FileOutput@@6B@

; 23   : //#ifdef	_WIN32
; 24   : 	imbue( std::locale::classic() );

  000ab	e8 00 00 00 00	 call	 ?classic@locale@std@@SAABV12@XZ ; std::locale::classic
  000b0	50		 push	 eax
  000b1	8b 06		 mov	 eax, DWORD PTR [esi]
  000b3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b6	03 ce		 add	 ecx, esi
  000b8	8d 7d 0c	 lea	 edi, DWORD PTR $T65818[ebp]
  000bb	e8 00 00 00 00	 call	 ?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ; std::basic_ios<char,std::char_traits<char> >::imbue
  000c0	8b cf		 mov	 ecx, edi
  000c2	e8 00 00 00 00	 call	 ??1locale@std@@QAE@XZ	; std::locale::~locale

; 25   : //#endif
; 26   : }

  000c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ca	5f		 pop	 edi
  000cb	8b c6		 mov	 eax, esi
  000cd	5e		 pop	 esi
  000ce	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d5	c9		 leave
  000d6	c2 08 00	 ret	 8
$L65820:
  00065	8b 45 f0	 mov	 eax, DWORD PTR $T65819[ebp]
  00068	83 e0 01	 and	 eax, 1
  0006b	74 0f		 je	 SHORT $L65821
  0006d	83 65 f0 fe	 and	 DWORD PTR $T65819[ebp], -2 ; fffffffeH
  00071	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	83 c1 60	 add	 ecx, 96			; 00000060H
  00077	e9 00 00 00 00	 jmp	 ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$L65821:
  0007c	c3		 ret	 0
$L65822:
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	83 c1 60	 add	 ecx, 96			; 00000060H
  00083	e9 00 00 00 00	 jmp	 ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
__ehhandler$??0FileOutput@@QAE@XZ:
  00088	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T65834
  0008d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
??0FileOutput@@QAE@XZ ENDP				; FileOutput::FileOutput
; Function compile flags: /Ogsy
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\ios
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 119  : 		{	// convert _Byte to character using imbued locale

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, 0 ; std::codecvt<char,char,int>::id
  00007	c3		 ret	 0
_$E1	ENDP
END
